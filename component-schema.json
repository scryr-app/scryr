{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Component Metadata",
  "description": "Schema for defining software components for diagramming in Scryr.",
  "type": "array",
  "items": {
    "type": "object",
    "required": ["name", "language", "frameworks", "deployment"],
    "properties": {
      "name": {
        "type": "string",
        "description": "The display name of the component."
      },
      "icon": {
        "type": "string",
        "description": "An emoji or short text symbol representing the component."
      },
      "description": {
        "type": "string",
        "description": "A short description of what the component does."
      },
      "version": {
        "type": "string",
        "description": "Version number of the component, e.g., '1.0.0'."
      },
      "language": {
        "type": "string",
        "description": "Primary programming language used.",
        "enum": ["Python", "TypeScript", "Go", "Rust"]
      },
      "frameworks": {
        "type": "array",
        "description": "Frameworks or libraries the component uses.",
        "items": {
          "type": "string",
          "enum": ["Django", "Express", "React", "NextJS"]
        }
      },
      "deployment": {
        "type": "string",
        "description": "Deployment method for the component.",
        "enum": ["Docker", "Kubernetes", "ECS", "Lambda"]
      },
      "source_code_url": {
        "type": "string",
        "description": "URL to the source code repository.",
        "format": "uri"
      },
      "connections": {
        "type": "array",
        "description": "Other components this one connects to.",
        "items": {
          "type": "string"
        }
      },
      "links": {
        "type": "array",
        "description": "External or internal URLs relevant to the component.",
        "items": {
          "type": "string",
          "format": "uri"
        }
      },
      "docs": {
        "type": "array",
        "description": "Documentation links for the component.",
        "items": {
          "type": "string",
          "format": "uri"
        }
      }
    }
  }
}
use std::str::FromStr;
use strum_macros::EnumString;

#[derive(Debug, PartialEq, EnumString)]
pub enum ProgrammingLanguage {
    ABAP,
    ActionScript,
    Ada,
    Algol,
    Apex,
    APL,
    Assembly,
    Awk,
    Bash,
    Batch,
    BCPL,
    Boo,
    C,
    Ceylon,
    Chapel,
    CLIPS,
    Clojure,
    COBOL,
    Cobra,
    CoffeeScript,
    ColdFusion,
    CommonLisp,
    CPlusPlus,
    Crystal,
    CSharp,
    CSS,
    D,
    Dart,
    Datalog,
    Delphi,
    Dylan,
    Eiffel,
    Elixir,
    Elm,
    Erlang,
    Factor,
    Falcon,
    Fantom,
    Forth,
    Fortran,
    FSharp,
    GDScript,
    Genie,
    Go,
    Groovy,
    Haskell,
    Haxe,
    HTML,
    Icon,
    Inform,
    Io,
    J,
    Java,
    JavaScript,
    JScript,
    Julia,
    Kotlin,
    LabVIEW,
    Lisp,
    LiveCode,
    LiveScript,
    Lua,
    MATLAB,
    Mercury,
    ML,
    Modula2,
    MoonScript,
    Nemerle,
    Nim,
    Nimrod,
    Nix,
    Oberon,
    ObjectiveC,
    OCaml,
    Occam,
    OpenCL,
    OpenEdge,
    Oz,
    P4,
    Pascal,
    Perl,
    PHP,
    Pike,
    Pliant,
    PLpgSQL,
    PostScript,
    PowerShell,
    Prolog,
    Pure,
    PureScript,
    Python,
    Q,
    QML,
    R,
    Racket,
    Reason,
    Red,
    REXX,
    Ring,
    RPG,
    Ruby,
    Rust,
    S,
    Sather,
    Scala,
    Scheme,
    Seed7,
    Shell,
    Shen,
    Simula,
    Smalltalk,
    SML,
    Solidity,
    SPARK,
    SQL,
    SQLPL,
    Stata,
    Swift,
    Tcl,
    Turing,
    TypeScript,
    Vala,
    VBScript,
    Verilog,
    VHDL,
    VisualBasic,
    Wolfram,
    X10,
    XQuery,
    Yorick,
    Zig,
    Zsh,
    // Add more languages as needed
}
